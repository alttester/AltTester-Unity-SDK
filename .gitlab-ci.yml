.reinstall_and_start_android_app: &reinstall_and_start_android_app
  - adb uninstall fi.altom.altunitytester || true
  - adb install sampleGame.apk
  - adb shell am start -n fi.altom.altunitytester/com.unity3d.player.UnityPlayerActivity
  - adb forward --remove-all
  - adb forward tcp:13000 tcp:13000

.initialize_python_venv: &initialize_python_venv
  - >
    if [ -d altunitytests ]; then
      echo "Activating virtual environment."
      source altunitytests/bin/activate
      echo "Virtual environment has been activated."
    else
      echo "Creating virtual environment."
      python3 -m venv altunitytests
      source altunitytests/bin/activate
      echo "Virtual environment has been created and activated."
    fi

.install_python_dependencies: &install_python_dependencies
  - pip install --upgrade pip setuptools wheel
  - pip uninstall --yes altunityrunner || true
  - pip install -r "Bindings~/python/requirements.txt"
  - pip install -r "Bindings~/python/requirements-dev.txt"
  - pip install -e "Bindings~/python" --root "Bindings~/python"

stages:
  - unit-tests
  - build
  - test
  - docs
  - deploy

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME != "master"'
      when: never
    - when: always

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - sampleGame.apk
    - sampleGame/
    - .cache/pip
    - altunitytests/

python-unit-tests:
  stage: unit-tests
  image: python:3.9
  interruptible: true
  before_script:
    - *install_python_dependencies
    - cd Bindings~/python/
  script:
    - flake8 .
    - pytest tests/unit

# TODO: Add unit tests for Java
java-unit-tests:
  stage: unit-tests
  image: maven:3-openjdk-11
  interruptible: true
  before_script:
    - cd Bindings~/java/
  script:
    - mvn validate
    - mvn compile

# TODO: Add unit tests for .NET
dotnet-unit-tests:
  stage: unit-tests
  image: mcr.microsoft.com/dotnet/sdk:5.0
  interruptible: true
  before_script:
    - cd Bindings~/dotnet/AltUnityDriver
  script:
    - dotnet build

build-apk:
  stage: build
  needs: [python-unit-tests, java-unit-tests, dotnet-unit-tests]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - android
  variables:
    ALTUNITYTESTER_PORT: 13000
  script:
    - whoami
    - adb uninstall fi.altom.altunitytester || true
    - ${UNITY_2019_2_HOME:-/Applications/Unity/Hub/Editor/2019.2.0f1/Unity.app/Contents/MacOS/Unity} -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterTools.BuildAltUnityTester.AndroidBuildFromCommandLine -logFile buildAndroid.log -quit
    - ls
  cache:
    paths:
      - sampleGame.apk
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - buildAndroid.log
      - sampleGame.apk

.build-webgl:
  stage: build
  needs: [python-unit-tests, java-unit-tests, dotnet-unit-tests]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - windows
    - unity
  script:
    - "& $env:UNITY_2019_2_HOME -batchmode -stackTraceLogType None -projectPath $env:CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterTools.BuildAltUnityTester.WebGLBuildFromCommandLine -logFile buildWebgl.log -quit"
  cache:
    paths:
      - build/webgl/**
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - buildWebgl.log
      - build/webgl/**

.build-ipa:
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - iPhone
  script:
    - whoami
    - ${UNITY_2019_2_HOME:-/Applications/Unity/Hub/Editor/2019.2.0f1/Unity.app/Contents/MacOS/Unity} -batchmode -projectPath $CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterTools.BuildAltUnityTester.IosBuildFromCommandLine -logFile buildIos.log -quit
    - cd sampleGame
    - xcodebuild build-for-testing -scheme Unity-iPhone -destination generic/platform=iOS -allowProvisioningUpdates
    - ls
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - sampleGame/
      - buildIos.log

unity-android-tests:
  stage: test
  needs: ["build-apk"]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - android
  variables:
    ALTUNITYDRIVER_PORT: 13000
    ALTUNITYDRIVER_HOST: "127.0.0.1"
  before_script:
    - *reinstall_and_start_android_app
  script:
    - ${UNITY_2019_2_HOME:-/Applications/Unity/Hub/Editor/2019.2.0f1/Unity.app/Contents/MacOS/Unity} -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterEditor.AltUnityTestRunner.RunTestFromCommandLine -logFile csharpAndroidTests.log -quit
  after_script:
    - cat csharpAndroidTests.log
    - adb pull /storage/emulated/0/Android/data/fi.altom.altunitytester/files/AltUnityServerLog.txt ./
    - adb forward --remove-all
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - csharpAndroidTests.log
      - AltUnityTesterLog.txt
      - AltUnityServerLog.txt

.unity-ios-tests:
  stage: test
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - iPhone
  script:
    - cd sampleGame
    - iproxy 13000 13000 &
    - xcodebuild test-without-building -destination 'platform=iOS,name=iPhone' -scheme Unity-iPhone -allowProvisioningUpdates &
    - sleep 60
    - ${UNITY_2019_2_HOME:-/Applications/Unity/Hub/Editor/2019.2.0f1/Unity.app/Contents/MacOS/Unity} -projectPath $CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterEditor.AltUnityTestRunner.RunTestFromCommandLine -logFile csharpIosTests.log -quit
    - killall iproxy || true
    - killall xcodebuild || true
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - sampleGame/
      - csharpIosTests.log
  needs: ["build-ipa"]

dotnet-android-tests:
  stage: test
  needs: ["build-apk"]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - android
  variables:
    ALTUNITYDRIVER_PORT: 13000
    ALTUNITYDRIVER_HOST: "127.0.0.1"
  before_script:
    - *reinstall_and_start_android_app
  script:
    - dotnet test Bindings~/dotnet/AltUnityDriver.Tests/AltUnityDriver.Tests.csproj --logger:"console;verbosity=detailed"
  after_script:
    - adb pull /storage/emulated/0/Android/data/fi.altom.altunitytester/files/AltUnityServerLog.txt ./
    - adb forward --remove-all
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - csharpAndroidTests.log
      - AltUnityTesterLog.txt
      - AltUnityServerLog.txt

.dotnet-webgl-tests:
  stage: test
  needs: ["build-webgl"]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - windows
    - unity
  #before_script:
  #  - git clone https://dorinaltom:$GITLAB_PROXY_REPO_KEY@gitlab.com/altom/altunity/altunity-proxy.git
  script:
    - docker run --rm -d -p 13000:13000 --name altunity-proxy altunity-proxy
    - docker run --rm -d -p 8080:8080 --name http-server -v $env:CI_PROJECT_DIR\build\webgl:/samplescenes-webgl node:14 /bin/bash -c "npm i -g http-server && http-server /samplescenes-webgl"
    - start-sleep 10
    - Start-Process msedge -ArgumentList http://localhost:8080/ -PassThru
    - dotnet test Bindings~/dotnet/AltUnityDriver.Tests/AltUnityDriver.Tests.csproj --filter "TestCategory!=Android&TestCategory!=WebGLUnsupported" --logger:"console;verbosity=detailed"
  after_script:
    - docker logs altunity-proxy > AltUnityProxyLog.txt
    - Stop-Process -Name msedge -Force
    - docker container stop http-server
    - docker container stop altunity-proxy
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - AltUnityTesterLog.txt
      - AltUnityProxyLog.txt

python-android-tests:
  stage: test
  needs: ["build-apk"]
  tags:
    - android
  variables:
    ALTUNITYDRIVER_PORT: 13000
    ALTUNITYDRIVER_HOST: "127.0.0.1"
  before_script:
    - *reinstall_and_start_android_app
    - *initialize_python_venv
    - *install_python_dependencies
  script:
    - pytest Bindings~/python/tests/integration/test_bindings.py
  after_script:
    - adb pull /storage/emulated/0/Android/data/fi.altom.altunitytester/files/AltUnityServerLog.txt ./
    - adb forward --remove-all
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - AltUnityTesterLog.txt
      - AltUnityServerLog.txt

java-android-tests:
  stage: test
  needs: ["build-apk"]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - when: always
  tags:
    - android
  variables:
    ALTUNITYDRIVER_PORT: 13000
    ALTUNITYDRIVER_HOST: "127.0.0.1"
  before_script:
    - *reinstall_and_start_android_app
  script:
    - cd "Bindings~/java"
    - mvn -Dtest=ro.altom.altunitytester.Tests* test
  after_script:
    - adb pull /storage/emulated/0/Android/data/fi.altom.altunitytester/files/AltUnityServerLog.txt ./
    - adb forward --remove-all
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - AltUnityServerLog.txt
      - AltUnityTesterLog.txt

create-unity-package:
  stage: docs
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
    - when: never
  tags:
    - unity
    - mac
  script:
    - mkdir -p public/AltUnityPackage || true
    - mkdir -p public/SampleScenes || true
    - ${UNITY_2019_2_HOME:-/Applications/Unity/Hub/Editor/2019.2.0f1/Unity.app/Contents/MacOS/Unity} -batchmode -projectPath $CI_PROJECT_DIR -executeMethod Altom.AltUnityTesterEditor.AltUnityTesterEditorWindow.CreatePackages -logFile createPackages.log -quit
    - AUT=$(find -E . -regex ".*/AltUnityTester.*\.unitypackage")
    - mv $AUT public/AltUnityPackage/AltUnityTester.unitypackage
    - SS=$(find -E . -regex ".*/SampleScenes.*\.unitypackage")
    - mv $SS public/SampleScenes/SampleScenes.unitypackage
    - cd public/AltUnityPackage
    - echo '<a href="https://altom.gitlab.io/altunity/altunitytester/AltUnityPackage/AltUnityTester.unitypackage">AltUnityTester.unitypackage</a>' > index.html
    - ls
    - cd ../SampleScenes
    - ls
  artifacts:
    when: always
    paths:
      - public

create-jar-archive:
  stage: docs
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
    - when: never
  tags:
    - unity
    - mac
  script:
    - mkdir -p public/AltUnityJAR || true
    - cd "Bindings~/java"
    - mvn clean compile assembly:single
    - mv target/altunitytester-java-client-jar-with-dependencies.jar ../../public/AltUnityJAR/altunitytester-java-client-jar.jar
    - cd ../../public/
    - echo '<a href="https://altom.gitlab.io/altunity/altunitytester/AltUnityJAR/altunitytester-java-client.jar">altunitytester-java-client-jar-with-dependencies.jar</a>' > index.html
    - ls
    - cat index.html
  artifacts:
    when: always
    paths:
      - public

publish-pip-package:
  stage: deploy
  interruptible: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
    - when: never
  tags:
    - unity
    - mac
    - android
  before_script:
    - cd "Bindings~/python"
    - python3 -m pip install --upgrade pip
    - python3 -m pip install -r requirements-dev.txt
  script:
    - python3 setup.py sdist
    - python3 -m twine upload dist/*

publish-nuget-package:
  stage: deploy
  interruptible: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
    - when: never
  tags:
    - unity
    - mac
    - android
  before_script:
    - cd "Bindings~/dotnet"
  script:
    - dotnet pack AltUnityDriver/AltUnityDriver.csproj -c release
    - dotnet nuget push AltUnityDriver/bin/release/AltUnityDriver.1.7.0.nupkg --api-key $NUGET_DEPLOY_KEY --source https://api.nuget.org/v3/index.json

publish-maven-package:
  stage: deploy
  interruptible: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
    - when: never
  tags:
    - unity
    - mac
  before_script:
    - cd "Bindings~/java"
  script:
    - export GPG_TTY=$(tty)
    - mvn clean deploy -Darguments="-Dgpg.passphrase=$GPG_PASSWORD" -f pom-release.xml -DskipTests

dev-docs:
  stage: docs
  only:
    refs:
      - master
  tags:
    - unity
    - mac
    - docs
  script:
    - cd docs
    - find . -type f ! -name 'license.md' -exec sed -i '' "s#https://altom.com#${DEV_DOCUMENTATION_URL}#g" {} \;
    - *initialize_python_venv
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - make clean
    - make html
    - ssh -o 'StrictHostKeyChecking no' altomdotcom@${HOST_IP_ALTOM} -p 34168  "rm -rf ${DOCUMENTATION_PATH}/*"
    - scp -r -P 34168 -o 'StrictHostKeyChecking no' _build/html/* altomdotcom@${HOST_IP_ALTOM}:${DOCUMENTATION_PATH}

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_MESSAGE =~ /^Documentation.*/'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
    - when: never
  tags:
    - unity
    - mac
  artifacts:
    paths:
      - public
  script:
    - cd docs
    - *initialize_python_venv
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - make clean
    - make html
    - cp -r _build/html/. ../public/
