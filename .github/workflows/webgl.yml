name: WebGL Tests

on: ['push']

# on:
  # workflow_dispatch:
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron: '0 4 * * 6' # run on every Saturday
  # push:

jobs:
  build-WebGL-Unity2021:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3

      - run: |
          export ALTSERVER_PORT=13005
          export ALTSERVER_HOST="192.168.11.35"
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod AltTesterTools.BuildAltTester.WebGLBuildFromCommandLine -logFile buildWebGL.log -quit

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: BuildWebGLArtifact
          path: |
            build
            buildWebGL.log

      - uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-DotNet:
    needs: build-WebGL-Unity2021

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name:
            BuildWebGLArtifact

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.1

      - run: |
          export ALTSERVER_PORT=13005
          export ALTSERVER_HOST="192.168.11.35"
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html
          cd ../..

      - run: |
          dotnet test Bindings~/dotnet/AltDriver.Tests/AltDriver.Tests.csproj --logger:"console;verbosity=detailed" --filter TestCategory!=WebGLUnsupported

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestCSharpArtifact
          path: |
            *.log

      - uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-Python:
    needs: build-WebGL-Unity2021

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name:
            BuildWebGLArtifact

      - name: Open application
        run: |
          export ALTSERVER_PORT=13005
          export ALTSERVER_HOST="192.168.11.35"
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html
          cd ../..

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip uninstall AltTester-Driver
          pip install -r "Bindings~/python/requirements.txt"
          pip install -r "Bindings~/python/requirements-dev.txt"
          pip install -e "Bindings~/python" --root "Bindings~/python"

      - name: Run integration tests
        run: |
          export ALTSERVER_PORT=13005
          export ALTSERVER_HOST="192.168.11.35"
          pytest Bindings~/python/tests/integration -m "not WebGLUnsupported"

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestPythonArtifact
          path: "**/*.log"

      - uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-Java:
    needs: build-WebGL-Unity2021

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name:
            BuildWebGLArtifact

      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          distribution: temurin
          java-version: 11

      - uses: stCarolas/setup-maven@v4.4

      - run: |
          export ALTSERVER_PORT=13005
          export ALTSERVER_HOST="192.168.11.35"
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html
          cd ../../Bindings~/java
          mvn clean  -Dtest=com.alttester.Tests* test -Dgroups=\!WebGLUnsupported

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestJavaArtifact
          path: |
            *.log

      - uses: ravsamhq/notify-slack-action@2.3.0
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
