name: Runs at night

on:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 0 * * *' # run at the end of every day

env:
  ALTSERVER_PORT: 13005
  ALTSERVER_HOST: 192.168.11.35
  PYTHON_VERSION: 3.10

jobs:
  build-webgl:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Build app
        run: |
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod AltTesterTools.BuildAltTester.WebGLBuildFromCommandLine -logFile buildWebGL.log -quit

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: webgl-build
          path: |
            build

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: webgl-build-logs
          path: |
            buildWebGL.log

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  build-ios:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Build sampleGame ipa
        run: |
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath -executeMethod AltTesterTools.BuildAltTester.IosBuildFromCommandLine -logFile buildiOS.log -quit
          xcodebuild -project ./sampleGame/Unity-iPhone.xcodeproj -scheme Unity-iPhone -archivePath Unity-iPhone.xcarchive archive
          xcodebuild -exportArchive -archivePath ./Unity-iPhone.xcarchive -exportOptionsPlist $EXPORT_OPTIONS_LOCATION/export-options.plist -exportPath ./
          osascript -e 'tell app "Xcode" to quit'

      - name: Upload builds
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            sampleGame.ipa

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-build-logs
          path: |
            **/*.log

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  build-android:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Build SampleGame apk
        run: |
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod AltTesterTools.BuildAltTester.AndroidBuildFromCommandLine -logFile buildAndroid.log -quit

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            sampleGame.apk

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build-logs
          path: |
            **/*.log

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-webgl-dotnet:
    needs: build-webgl

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name:
            webgl-build

      - name: Open application
        run: |
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html

      - name: Run tests
        run: |
          dotnet test Bindings~/dotnet/AltDriver.Tests/AltDriver.Tests.csproj --logger:"console;verbosity=detailed" --filter TestCategory!=WebGLUnsupported

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always() # run this step even if one of the previous step failed
        with:
          name: webgl-dotnet-logs
          path: |
            **/*.log

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-webgl-python:
    needs: build-webgl

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name:
            webgl-build

      - name: Open application
        run: |
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip uninstall AltTester-Driver
          pip install -r "Bindings~/python/requirements.txt"
          pip install -r "Bindings~/python/requirements-dev.txt"
          pip install -e "Bindings~/python" --root "Bindings~/python"

      - name: Run integration tests
        run: |
          pytest Bindings~/python/tests/integration -m "not WebGLUnsupported"

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always() # run this step even if one of the previous step failed
        with:
          name: webgl-python-logs
          path: "**/*.log"

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-webgl-java:
    needs: build-webgl

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name:
            webgl-build

      - name: Open application
        run: |
          cd build/webgl
          python3 -m http.server --cgi 8360 &
          osascript -e 'quit app "Chrome"'
          open http://localhost:8360/index.html

      - name: Run tests
        run: |
          cd Bindings~/java
          mvn clean -Dtest=com.alttester.Tests* test -Dgroups=\!WebGLUnsupported

      - name: Close Chrome
        if: always()
        run: osascript -e 'quit app "Chrome"'

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: webgl-java-logs
          path: |
            **/*.log

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-ios-browserstack-python:
    needs: build-ios

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: ios-build

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Copy application to Python binding folder
        run: |
          cp sampleGame.ipa Bindings~/python

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip uninstall AltTester-Driver
          pip install -r "Bindings~/python/requirements.txt"
          pip install -r "Bindings~/python/requirements-dev.txt"
          pip install -e "Bindings~/python" --root "Bindings~/python"

      - name: Run integration tests
        run: |
          export RUN_IN_BROWSERSTACK="true"
          export RUN_IOS_IN_BROWSERSTACK="true"
          export BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }}
          export BROWSERSTACK_KEY=${{ secrets.BROWSERSTACK_KEY }}
          allure generate
          pytest -s -v --alluredir=allure-report/ Bindings~/python/tests/integration -m "not iOSUnsupported"

      - name: Generate Allure report
        if: always()
        run: |
          allure generate -c allure-report -o allure-results-html
          allure-combine ./allure-results-html

      - name: Upload artifact and allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-browserstack-python-artifacts
          path: |
              **/*.log
              ./allure-results-html/complete.html

      # - name: Unset Browserstack Flag
      #   if: always()
      #   run: |
      #     export RUN_IOS_IN_BROWSERSTACK="false"
      #     export RUN_IN_BROWSERSTACK="false"

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  test-android-browserstack-python:
    needs: build-android

    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: android-build

      - name: Copy application to Python test folder
        run: |
          cp sampleGame.apk Bindings~/python

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip uninstall AltTester-Driver
          pip install -r "Bindings~/python/requirements.txt"
          pip install -r "Bindings~/python/requirements-dev.txt"
          pip install -e "Bindings~/python" --root "Bindings~/python"

      - name: Run integration tests
        run: |
          export RUN_IN_BROWSERSTACK="true"
          export RUN_ANDROID_IN_BROWSERSTACK="true"
          export BROWSERSTACK_USERNAME=${{ secrets.BROWSERSTACK_USERNAME }}
          export BROWSERSTACK_KEY=${{ secrets.BROWSERSTACK_KEY }}
          pytest -s Bindings~/python/tests/integration

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-browserstack-python-logs
          path: "**/*.log"

      # - name: Unset Browserstack Flag
      #   if: always()
      #   run: |
      #     export RUN_IN_BROWSERSTACK="false"
      #     export RUN_ANDROID_IN_BROWSERSTACK="false"

      - name: Notify on Slack
        uses: ravsamhq/notify-slack-action@v2
        if: ${{ always() && github.ref_name == 'development' }}
        with:
          status: ${{ job.status }}
          notification_title: "The Job *{job}* in Workflow *{workflow}* has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
          mention_groups: "alttester,!here"
          mention_groups_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
