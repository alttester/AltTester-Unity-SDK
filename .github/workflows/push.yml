name: Push

on: [push, workflow_dispatch]

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r "Docs/requirements.txt"
      - name: Build docs
        run: |
          cd Docs
          make html
      - uses: actions/upload-artifact@v3
        with:
          name: DocumentationHTML
          path: Docs/build/html/

  build-macOS:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v3

      - name: Build SampleGame
        run: |
          export ALTSERVER_PORT=13020
          export ALTSERVER_HOST="127.0.0.1"
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod AltTesterTools.BuildAltTester.MacBuildFromCommandLine -logFile buildMac.log -quit

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: BuildMacArtifact
          path: |
            sampleGame.app
            **/*.log

  test-CSharp-Editor:
    runs-on: [self-hosted, macOS]
    needs: build-macOS

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: BuildMacArtifact

      - run: |
          export ALTSERVER_PORT=13020
          export ALTSERVER_HOST="127.0.0.1"
          chmod -R 755 sampleGame.app
          open sampleGame.app
      - run: |
          export ALTSERVER_PORT=13020
          export ALTSERVER_HOST="127.0.0.1"
          $UNITY_2021_3_HOME -batchmode -stackTraceLogType None -projectPath $CI_PROJECT_DIR -executeMethod AltTester.AltTesterUnitySDK.Editor.AltTestRunner.RunTestFromCommandLine -testsAssembly Assembly-CSharp-Editor  -logFile - -quit
      #TODO add back -reportPath $CI_PROJECT_DIR/reportTest.xml for removing because it's giving me unauthorized error
      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestCSharpArtifact
          path: |
            **/*.log
            reportTest.xml

  test-DotNet:
    runs-on: [self-hosted, macOS]
    needs: build-macOS

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: BuildMacArtifact

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.1

      - run: |
          export ALTSERVER_PORT=13020
          echo $ALTSERVER_PORT
          export ALTSERVER_HOST="127.0.0.1"
          chmod -R 755  sampleGame.app
          open sampleGame.app
          dotnet test Bindings~/dotnet/AltDriver.Tests/AltDriver.Tests.csproj --logger:"console;verbosity=detailed"

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestCSharpArtifact
          path: "**/*.log"

  test-Python:
    runs-on: [self-hosted, macOS]
    needs: build-macOS

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: BuildMacArtifact

      - name: Open application
        run: |
          export ALTSERVER_PORT=13020
          export ALTSERVER_HOST="127.0.0.1"
          chmod -R 755 sampleGame.app
          open sampleGame.app
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip uninstall AltTester-Driver
          pip install -r "Bindings~/python/requirements.txt"
          pip install -r "Bindings~/python/requirements-dev.txt"
          pip install -e "Bindings~/python" --root "Bindings~/python"

      - name: Lint with flake8
        run: |
          flake8 Bindings~/python/ --config Bindings~/python/.flake8

      - name: Run unit tests
        run: |
          pytest Bindings~/python/tests/unit

      - name: Run integration tests
        run: |
          export ALTSERVER_PORT=13020
          export ALTSERVER_HOST="127.0.0.1"
          pytest Bindings~/python/tests/integration

      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestPythonArtifact
          path: "**/*.log"

  test-Java:
    runs-on: [self-hosted, macOS]
    needs: build-macOS

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: BuildMacArtifact

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11

      - name: Set up Maven # setup-java does't install maven on self-hosted driver
        uses: stCarolas/setup-maven@v4.5

      - run: |
          export ALTSERVER_PORT=13020
          echo $ALTSERVER_PORT
          export ALTSERVER_HOST="127.0.0.1"
          chmod -R 755  sampleGame.app
          open sampleGame.app
          cd "Bindings~/java"
          mvn -Dtest=com.alttester.Tests* test
      - uses: actions/upload-artifact@v3
        if: always() # run this step even if one of the previous step failed
        with:
          name: TestJavaArtifact
          path: "**/*.log"

  deploy-dev-docs:
    runs-on: ubuntu-latest
    needs: build-docs

    if: github.ref == 'refs/heads/development'

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: DocumentationHTML
          path: DocumentationHTML/

      - name: Replace URL
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ${{ secrets.LIVE_URL_ALTTESTER }}
          replace: ${{ secrets.DEV_URL_ALTTESTER }}
          regex: true

      - name: Upload documentation
        uses: garygrossgarten/github-action-scp@release
        with:
          local: DocumentationHTML
          remote: ${{ secrets.DOCUMENTATION_PATH_PRO }}
          host: ${{ secrets.HOST_IP_ALTTESTER }}
          port: ${{ secrets.PORT_DEV_ALTTESTER }}
          username: ${{ secrets.USERNAME_ALTTESTER }}
          password: ${{ secrets.PASSWORD_ALTTESTER }}
          rmRemote: true

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-docs

    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: DocumentationHTML
          path: DocumentationHTML/

      - name: Upload documentation
        uses: garygrossgarten/github-action-scp@release
        with:
          local: DocumentationHTML
          remote: ${{ secrets.DOCUMENTATION_PATH_PRO }}
          host: ${{ secrets.HOST_IP_ALTTESTER }}
          port: ${{ secrets.PORT_LIVE_ALTTESTER }}
          username: ${{ secrets.USERNAME_ALTTESTER }}
          password: ${{ secrets.PASSWORD_ALTTESTER }}
          rmRemote: true